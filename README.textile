h1. LovelyLayouts

Here's a bunch of helpers I find myself needing every time I start up a new Rails project.  Mostly, it's just some nicer DSL wrappers around the @content_for@ patterns we all use to get get content up from the view to the layout in a Rails application (for titles, etc).

h2. In your view

Eg: app/views/posts/show.html.erb

<pre>
 <% title @post.title %>
 <% description @post.description %>
 <% keywords @post.tags.join(", ") %>
 <% copyright @post.user.full_name %>
</pre>

h2. In your layout

<pre>
  <html>
    <head>
      <%= title_tag "optional default title here", :prefix => "optional prefix text", :suffix => "optional suffix text" %>
      <%= description_tag "optional default meta description here" %>
      <%= keywords_tag "optional default meta keywords here" %>
      <%= copyright_tag "optional default meta copyright notice here" %>
    </head>
    <body>
      ...
      <%= yield %>
      ...
    </body>
  </html>
</pre>

h2. And a neat trick for the @<body>@ tag

A block helper for creating body tags is also in there.  The @id@ is generated from @params[:controller]@ (eg "posts"), and the @class@ is generated from @params[:controller]@ name and @params[:action]@ (eg "posts show").

<pre>
  <% body do %>
    ...
  <% end %>
</pre>

Which pushes out something like this:

<pre>
  <body id="posts" class="posts show">
    ...
  </body>
</pre>

You can set the @id@ and @class@ from your views:

<pre>
  <% body_id "blog" %>
  <% body_class "whatever" %>
</pre>

You can override the @id@ and @class@ (or any attribute of the @<body>@ tag) too:

<pre>
  <% body :id => "blog", :class => "whatever", :onload => "party()" do %>
    ...
  <% end %>
</pre>

h2. There's always a TODO List

* might write some tests!
* probably try to distill the way I do tabs too


h2. Blah blah blah blah

Copyright (c) 2009 "Justin French":http://www.justinfrench.com/, released under the MIT license.

